{"version":3,"file":"src_js_modules_ChatShortCode_index_js.js","mappings":"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","sources":["webpack://template-market/./src/js/modules/ChatShortCode/context/ChatShortCodeContext.js","webpack://template-market/./src/js/modules/ChatShortCode/index.js"],"sourcesContent":["import { createContext, useContext, useState } from '@wordpress/element';\nconst ChatShortCodeStateContent = createContext();\n\nexport const useChatShortCodeState = () =>\n\tuseContext( ChatShortCodeStateContent );\n\nexport const ChatShortCodeStateProvider = ( { children } ) => {\n\tconst chatShortCodeObj = {\n\t\tsingleForm: null,\n\t\testimatedTime: null,\n\t\tactiveQuestion: null,\n\t\tnextQuestion: null,\n\t\tisFinalSubmissionActive: false,\n\t\tisLoggedIn: '1',\n\t\tuserVerificationField: 'default',\n\t\tuserEmail: '',\n\t\tsubmittedQuestions: [],\n\t\treWatchedQuestionIds: [],\n\t\tcachedQuestionsValue: [],\n\t\tresponseToken: null,\n\t\tisProcessingSubmitCallback: null,\n\t\tglobalKey: {\n\t\t\tbeforeSubmitCallback: 'chatFormBeforeSubmitCallback',\n\t\t\tbeforeSubmitCallbackArgs: 'chatFormBeforeSubmitCallbackArgs',\n\t\t},\n\t\tsubmissionServerError: null,\n\t};\n\tconst [ chatShortCodeState, setChatShortCodeState ] =\n\t\tuseState( chatShortCodeObj );\n\n\treturn (\n\t\t<ChatShortCodeStateContent.Provider\n\t\t\tvalue={ { chatShortCodeState, setChatShortCodeState } }\n\t\t>\n\t\t\t{ children }\n\t\t</ChatShortCodeStateContent.Provider>\n\t);\n};\n","import { lazy, useEffect, Suspense } from '@wordpress/element';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { ChatShortCodeStateProvider } from './context/ChatShortCodeContext';\nimport { useChatShortCodeState } from './context/ChatShortCodeContext';\nimport ContentLoading from '@components/ContentLoading';\nimport queryStore from '../../queryStore';\nconst ChatForm = lazy( () => import( '@components/ChatForm' ) );\n\nfunction ChatShortCode( props ) {\n\tconst { data, isLoggedIn } = props;\n\tconst { chatShortCodeState, setChatShortCodeState } =\n\t\tuseChatShortCodeState();\n\tconst { singleForm } = chatShortCodeState;\n\n\tconst { questions } = JSON.parse( JSON.parse( data ).content );\n\n\tuseEffect( () => {\n\t\tlet activeQuestion = questions.find( ( item, index ) => {\n\t\t\tif ( item.question_type === 'welcome' ) {\n\t\t\t\treturn true;\n\t\t\t} else if ( isLoggedIn === '1' && index === 1 ) {\n\t\t\t\treturn true;\n\t\t\t} else if (\n\t\t\t\tisLoggedIn === '0' &&\n\t\t\t\titem.question_type === 'user_validation'\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t} );\n\n\t\tsetChatShortCodeState( {\n\t\t\t...chatShortCodeState,\n\t\t\tsingleForm: JSON.parse( data ),\n\t\t\tactiveQuestion: activeQuestion,\n\t\t\tisLoggedIn: isLoggedIn,\n\t\t} );\n\t}, [] );\n\n\treturn (\n\t\tsingleForm && (\n\t\t\t<Suspense fallback={ <ContentLoading /> }>\n\t\t\t\t<ChatForm\n\t\t\t\t\tmoduleState={ chatShortCodeState }\n\t\t\t\t\tsetModuleState={ setChatShortCodeState }\n\t\t\t\t\tisFloatingForm={ false }\n\t\t\t\t/>\n\t\t\t</Suspense>\n\t\t)\n\t);\n}\n\nexport default function ChatShortCodeModule( props ) {\n\treturn (\n\t\t<QueryClientProvider client={ queryStore }>\n\t\t\t<ChatShortCodeStateProvider>\n\t\t\t\t<ChatShortCode { ...props } />\n\t\t\t</ChatShortCodeStateProvider>\n\t\t</QueryClientProvider>\n\t);\n}\n"],"names":["createContext","useContext","useState","ChatShortCodeStateContent","useChatShortCodeState","ChatShortCodeStateProvider","children","chatShortCodeObj","singleForm","estimatedTime","activeQuestion","nextQuestion","isFinalSubmissionActive","isLoggedIn","userVerificationField","userEmail","submittedQuestions","reWatchedQuestionIds","cachedQuestionsValue","responseToken","isProcessingSubmitCallback","globalKey","beforeSubmitCallback","beforeSubmitCallbackArgs","submissionServerError","chatShortCodeState","setChatShortCodeState","createElement","Provider","value","lazy","useEffect","Suspense","QueryClientProvider","ContentLoading","queryStore","ChatForm","ChatShortCode","props","data","questions","JSON","parse","content","find","item","index","question_type","fallback","moduleState","setModuleState","isFloatingForm","ChatShortCodeModule","client"],"sourceRoot":""}